/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/stone.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Stones: THREE.Mesh;
    Stones001: THREE.Mesh;
  };
  materials: {
    ["Stone.001"]: THREE.MeshStandardMaterial;
  };
};

export function Stone(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/stone.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="stone"
        geometry={nodes.Stones.geometry}
        material={materials["Stone.001"]}
        position={[-2.09, 0, -0.25]}
        castShadow={true}
      />
      <mesh
        name="stone"
        geometry={nodes.Stones001.geometry}
        material={materials["Stone.001"]}
        position={[-2.09, 0, -0.25]}
        castShadow={true}
      />
    </group>
  );
}
