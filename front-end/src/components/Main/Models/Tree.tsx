/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/tree.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh;
    Mesh_1: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
  };
};

export function Tree(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group | any>();
  const { nodes, materials, animations } = useGLTF(
    "/models/tree.glb"
  ) as GLTFResult;

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Cone" position={[-2.93, 0, 1.03]}>
          <mesh
            name="Mesh"
            geometry={nodes.Mesh.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            name="Mesh_1"
            geometry={nodes.Mesh_1.geometry}
            material={materials["Material.003"]}
          />
        </group>
      </group>
    </group>
  );
}
