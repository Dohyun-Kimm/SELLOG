/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/character.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    f_1: THREE.SkinnedMesh;
    Mesh079: THREE.SkinnedMesh;
    Mesh079_1: THREE.SkinnedMesh;
    f_7: THREE.SkinnedMesh;
    Mesh020: THREE.SkinnedMesh;
    Mesh020_1: THREE.SkinnedMesh;
    Mesh032: THREE.SkinnedMesh;
    Mesh032_1: THREE.SkinnedMesh;
    m_5: THREE.SkinnedMesh;
    spine: THREE.Bone;
    root: THREE.Bone;
    ["MCH-torsoparent"]: THREE.Bone;
    ["MCH-hand_ikparentL"]: THREE.Bone;
    ["MCH-upper_arm_ik_targetparentL"]: THREE.Bone;
    ["MCH-hand_ikparentR"]: THREE.Bone;
    ["MCH-upper_arm_ik_targetparentR"]: THREE.Bone;
    ["MCH-foot_ikparentL"]: THREE.Bone;
    ["MCH-thigh_ik_targetparentL"]: THREE.Bone;
    ["MCH-foot_ikparentR"]: THREE.Bone;
    ["MCH-thigh_ik_targetparentR"]: THREE.Bone;
  };
  materials: {
    characters: THREE.MeshStandardMaterial;
    characters_metall: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Idle" | "Run" | "Sad" | "Song Jump" | "Walk" | "Win";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Characters(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group | any>();
  const { nodes, materials, animations } = useGLTF(
    "/models/character.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions | any>(animations, group);

  return (
    <group ref={group} {...props} dispose={null} position={[0, -0.7, 0]}>
      <group name="Scene">
        <group name="WGTS_rig">
          <group
            name="WGT-rig_f_index03R"
            position={[-0.83, 1.14, 0.04]}
            rotation={[-1.53, 0.23, -1.29]}
            scale={0.05}
          />
          <group
            name="WGT-rig_hand_ikR"
            position={[-0.31, 0.4, -0.01]}
            rotation={[-1.56, 1.07, -2.69]}
            scale={0.05}
          />
          <group name="WGT-rig_root" scale={0.95} />
        </group>
        <group name="metarig">
          <primitive object={nodes.spine} />
        </group>
        <group name="rig">
          <primitive object={nodes.root} />
          <primitive object={nodes["MCH-torsoparent"]} />
          <primitive object={nodes["MCH-hand_ikparentL"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentL"]} />
          <primitive object={nodes["MCH-hand_ikparentR"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentR"]} />
          <primitive object={nodes["MCH-foot_ikparentL"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentL"]} />
          <primitive object={nodes["MCH-foot_ikparentR"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentR"]} />
          <skinnedMesh
            name="f_1"
            geometry={nodes.f_1.geometry}
            material={materials.characters}
            skeleton={nodes.f_1.skeleton}
          />
        </group>
        <group
          name="Area001"
          position={[-0.29, 1.01, -0.72]}
          rotation={[-3.13, -0.2, -1.57]}
        />
        <group
          name="Area002"
          position={[0.35, 1.07, -0.73]}
          rotation={[-3.13, 0.28, -1.57]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/character.glb");
