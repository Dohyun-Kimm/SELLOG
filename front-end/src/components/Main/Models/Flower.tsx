/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/flower.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle_1: THREE.Mesh;
    Circle_2: THREE.Mesh;
    Vert: THREE.Mesh;
    Cube: THREE.Mesh;
    Circle002: THREE.Mesh;
    Circle002_1: THREE.Mesh;
    Cube001_1: THREE.Mesh;
    Plane: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
  };
};

type ActionName = "CameraAction";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Flower(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group | any>();
  const { nodes, materials, animations } = useGLTF(
    "/models/flower.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions | any>(animations, group);

  return (
    <group ref={group} {...props} dispose={null} scale={0.2}>
      <group name="Scene">
        <group
          name="Lattice"
          position={[0, 2.08, 0]}
          scale={[3.73, 4.11, 3.73]}
          castShadow={true}
        />
        <group
          name="Area"
          position={[-0.17, 6.89, -0.8]}
          rotation={[-Math.PI / 2, 0, 0]}
          castShadow={true}
        />
        <group
          name="Area001"
          position={[-2.03, 3.02, -1.83]}
          rotation={[-Math.PI / 2, 0, 0]}
          castShadow={true}
        />
        <group
          name="Area002"
          position={[8.6, 5.22, 4.49]}
          rotation={[-Math.PI / 2, 0, 0]}
          castShadow={true}
        />
        <group
          name="Area003"
          position={[-4.66, 6.51, -6.79]}
          rotation={[-Math.PI / 2, 0, 0]}
          castShadow={true}
        />
        <group name="Circle" castShadow={true}>
          <mesh
            name="Circle_1"
            geometry={nodes.Circle_1.geometry}
            material={materials["Material.001"]}
            castShadow={true}
          />
          <mesh
            name="Circle_2"
            geometry={nodes.Circle_2.geometry}
            material={materials["Material.007"]}
            castShadow={true}
          />
        </group>
        <mesh
          name="Vert"
          geometry={nodes.Vert.geometry}
          material={materials["Material.002"]}
          position={[0, 0.79, 0]}
          castShadow={true}
        />
        <mesh
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={materials["Material.003"]}
          position={[0, 3.24, -0.07]}
          rotation={[0.95, 0, 0]}
          castShadow={true}
        >
          <group name="Circle001" castShadow={true}>
            <mesh
              name="Circle002"
              geometry={nodes.Circle002.geometry}
              material={materials["Material.005"]}
              castShadow={true}
            />
            <mesh
              name="Circle002_1"
              geometry={nodes.Circle002_1.geometry}
              material={materials["Material.006"]}
              castShadow={true}
            />
          </group>
          <mesh
            name="Cube001_1"
            geometry={nodes.Cube001_1.geometry}
            material={materials["Material.004"]}
            position={[-0.26, 0.12, 0]}
            castShadow={true}
          />
        </mesh>
        <mesh
          name="Plane"
          geometry={nodes.Plane.geometry}
          material={materials["Material.002"]}
          position={[0.13, 1.09, 0.07]}
          rotation={[Math.PI / 2, -Math.PI / 4, Math.PI / 4]}
          castShadow={true}
        />
      </group>
    </group>
  );
}
