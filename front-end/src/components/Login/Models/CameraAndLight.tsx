/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/login.glb -t
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, OrthographicCamera, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Plane_1: THREE.Mesh;
    Plane_2: THREE.Mesh;
    Plane001_1: THREE.Mesh;
    Plane001_2: THREE.Mesh;
    Circle: THREE.Mesh;
    Plane002: THREE.Mesh;
    Circle002: THREE.Mesh;
    Plane003: THREE.Mesh;
    Plane005: THREE.Mesh;
    Circle003: THREE.Mesh;
    Circle004: THREE.Mesh;
    Plane006: THREE.Mesh;
    Plane007: THREE.Mesh;
    Vert: THREE.Mesh;
    Plane009: THREE.Mesh;
    Plane009_1: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.009"]: THREE.MeshStandardMaterial;
    ["Material.012"]: THREE.MeshPhysicalMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
  };
};

export function CameraAndLight(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group | any>();

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        {/* 카메라 */}
        <OrthographicCamera
          name="TrueIsoCam"
          makeDefault={true}
          far={1000}
          near={1}
          position={[30.97, 32.08, 30.25]}
          rotation={[-0.79, 0.62, 0.52]}
          zoom={80}
        />

        {/* 빛 */}
        <pointLight
          intensity={3}
          decay={2}
          color="#ff6728"
          position={[-3.77, 2.82, -1.77]}
          rotation={[-Math.PI / 2, 0, -Math.PI]}
        />
        <pointLight
          intensity={3}
          decay={2}
          color="#ff4f28"
          position={[3.14, 2.92, -3.19]}
          rotation={[-Math.PI / 2, 0, -Math.PI]}
        />
        <pointLight
          intensity={2}
          decay={2}
          color="#ff4f28"
          position={[0, 1, 20]}
          rotation={[-Math.PI / 2, 0, -Math.PI]}
        />
        <pointLight
          intensity={1}
          decay={2}
          color="#ff4f28"
          position={[1, 2, 1]}
          rotation={[-Math.PI / 2, 0, -Math.PI]}
        />
      </group>
    </group>
  );
}

export default CameraAndLight;
