/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/items/black_coffeemachine_1.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Coffemaker: THREE.Mesh;
    Circle014: THREE.Mesh;
    Circle015: THREE.Mesh;
    Circle016: THREE.Mesh;
    Plane056: THREE.Mesh;
  };
  materials: {
    Metal: THREE.MeshStandardMaterial;
    black: THREE.MeshStandardMaterial;
    Glass: THREE.MeshPhysicalMaterial;
  };
};

export function Black_coffeemachine_1(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/items/black_coffeemachine_1.glb"
  ) as GLTFResult;
  return (
    <group
      {...props}
      dispose={null}
      scale={3}
      rotation={[0, THREE.MathUtils.degToRad(-100), 0]}
      position={[0, -1.5, 0]}
    >
      <mesh
        geometry={nodes.Coffemaker.geometry}
        material={materials.Metal}
        // position={[-0.04, 1.9, 0.04]}
        scale={1.11}
      >
        <mesh
          geometry={nodes.Circle014.geometry}
          material={materials.black}
          position={[0.05, 0.76, 0]}
        />
        <mesh
          geometry={nodes.Circle015.geometry}
          material={materials.Glass}
          position={[0.04, 0.07, 0]}
        >
          <mesh
            geometry={nodes.Circle016.geometry}
            material={materials.black}
          />
          <mesh
            geometry={nodes.Plane056.geometry}
            material={materials.black}
            position={[0.12, 0.26, 0]}
          />
        </mesh>
      </mesh>
    </group>
  );
}

// useGLTF.preload("/models/items/black_coffeemachine_1.glb");
