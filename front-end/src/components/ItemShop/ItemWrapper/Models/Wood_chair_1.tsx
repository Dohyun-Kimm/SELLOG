/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/items/wood_chair_1.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["Chair_-_Back"]: THREE.Mesh;
    ["Chair_-_Back_Cusion"]: THREE.Mesh;
    ["Leg_-_Back"]: THREE.Mesh;
    ["Leg_-_Front"]: THREE.Mesh;
    ["Seat_-_Cushion"]: THREE.Mesh;
    ["Seat_-_Rail"]: THREE.Mesh;
  };
  materials: {
    Wood: THREE.MeshStandardMaterial;
    Red: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/items/wood_chair_1.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes["Chair_-_Back"].geometry}
        material={materials.Wood}
        position={[-0.01, 0, 2.48]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={1.28}
      >
        <mesh
          geometry={nodes["Chair_-_Back_Cusion"].geometry}
          material={materials.Red}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          geometry={nodes["Leg_-_Back"].geometry}
          material={materials.Wood}
          position={[0, 0.49, -0.28]}
        />
        <mesh
          geometry={nodes["Leg_-_Front"].geometry}
          material={materials.Wood}
          position={[0, 0.31, 0.13]}
        />
        <mesh
          geometry={nodes["Seat_-_Cushion"].geometry}
          material={materials.Red}
          position={[0, 0.81, -0.17]}
        />
        <mesh
          geometry={nodes["Seat_-_Rail"].geometry}
          material={materials.Wood}
          position={[0, 0.64, -0.18]}
        />
      </mesh>
    </group>
  );
}

// useGLTF.preload("/models/items/wood_chair_1.glb");
