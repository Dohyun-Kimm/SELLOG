/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/items/grey_bin_1.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Trash: THREE.Mesh;
  };
  materials: {
    grey: THREE.MeshStandardMaterial;
  };
};

export function Grey_bin_1(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/items/grey_bin_1.glb"
  ) as GLTFResult;
  return (
    <group
      {...props}
      dispose={null}
      scale={2.2}
      position={[0, -2, 0]}
      rotation={[0, THREE.MathUtils.degToRad(-90), 0]}
    >
      <directionalLight
        color={"#FFFFFF"}
        intensity={0.8}
        position={[2, 5, 3]}
      />
      <mesh geometry={nodes.Trash.geometry} material={materials.grey} />
    </group>
  );
}

// useGLTF.preload("/models/items/grey_bin_1.glb");
