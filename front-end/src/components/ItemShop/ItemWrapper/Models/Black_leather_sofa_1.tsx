/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/items/black_leather_sofa_1.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Sofa: THREE.Mesh;
    Cube006: THREE.Mesh;
    Cube008: THREE.Mesh;
    Plane018: THREE.Mesh;
    Plane021: THREE.Mesh;
  };
  materials: {
    ["Leather.001"]: THREE.MeshStandardMaterial;
  };
};

export function Black_leather_sofa_1(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/items/black_leather_sofa_1.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Sofa.geometry}
        material={materials["Leather.001"]}
        scale={[1.05, 1.25, 0.96]}
      >
        <mesh
          geometry={nodes.Cube006.geometry}
          material={materials["Leather.001"]}
          position={[0.98, 0.82, -0.11]}
        />
        <mesh
          geometry={nodes.Cube008.geometry}
          material={materials["Leather.001"]}
          position={[-1.04, 0.82, -0.11]}
        />
        <mesh
          geometry={nodes.Plane018.geometry}
          material={materials["Leather.001"]}
          position={[-0.86, 0.08, -0.92]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={1.1}
        />
        <mesh
          geometry={nodes.Plane021.geometry}
          material={materials["Leather.001"]}
          position={[-2.07, 0.08, 0.87]}
          scale={0.77}
        />
      </mesh>
    </group>
  );
}

// useGLTF.preload("/models/items/black_leather_sofa_1.glb");
