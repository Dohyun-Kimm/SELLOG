/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/items/house_tree_1.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Vert: THREE.Mesh;
    tree: THREE.Mesh;
    leaves: THREE.Mesh;
    Vert001: THREE.Mesh;
  };
  materials: {
    ["White.001"]: THREE.MeshStandardMaterial;
    Plant: THREE.MeshStandardMaterial;
    Leaves: THREE.MeshStandardMaterial;
    Dirt: THREE.MeshStandardMaterial;
  };
};

export function House_tree_1(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/items/house_tree_1.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null} position={[0, -2.5, 0]} scale={1.5}>
      <mesh
        geometry={nodes.Vert.geometry}
        material={materials["White.001"]}
        scale={0.89}
      >
        <mesh
          geometry={nodes.tree.geometry}
          material={materials.Plant}
          scale={0.6}
        >
          <mesh geometry={nodes.leaves.geometry} material={materials.Leaves} />
        </mesh>
        <mesh geometry={nodes.Vert001.geometry} material={materials.Dirt} />
      </mesh>
    </group>
  );
}

// useGLTF.preload("/models/items/house_tree_1.glb");
